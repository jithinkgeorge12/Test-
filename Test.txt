import React, { useState } from "react";
import "./App.css";

function App() {
  const [abcdStatus, setAbcdStatus] = useState("Unknown");
  const [domainStatus, setDomainStatus] = useState("Unknown");
  const [domainMessage, setDomainMessage] = useState("");
  const [curlOutput, setCurlOutput] = useState("Waiting for command...");
  const [domain, setDomain] = useState("");
  const [port, setPort] = useState("");
  const [curlCommand, setCurlCommand] = useState("");

  const checkABCD = () => {
    fetch("/api/abcd/check")
      .then((response) => response.json())
      .then((data) => {
        setAbcdStatus(data ? "Available" : "Down");
      })
      .catch((error) => console.error("Error:", error));
  };

  const checkDomain = () => {
    fetch(`/api/domain/connectivity?domain=${domain}&port=${port}`)
      .then((response) => response.json())
      .then((data) => {
        setDomainStatus(data.success ? "Success" : "Failed");
        setDomainMessage(data.message);
      })
      .catch((error) => console.error("Error:", error));
  };

  const executeCurl = () => {
    fetch("/api/curl/execute", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ curlCommand }),
    })
      .then((response) => response.json())
      .then((data) => {
        setCurlOutput(data.output || "No output");
      })
      .catch((error) => console.error("Error:", error));
  };

  return (
    <div className="App">
      <header className="App-header">
        <h1>Connection Verification Tool</h1>
      </header>

      <section className="App-section">
        <h2>ABCD Availability Check</h2>
        <button onClick={checkABCD}>Check Availability</button>
        <p>Status: {abcdStatus}</p>
      </section>

      <section className="App-section">
        <h2>Domain Connectivity Check</h2>
        <input
          type="text"
          placeholder="Domain"
          value={domain}
          onChange={(e) => setDomain(e.target.value)}
        />
        <input
          type="text"
          placeholder="Port"
          value={port}
          onChange={(e) => setPort(e.target.value)}
        />
        <button onClick={checkDomain}>Check Connectivity</button>
        <p>Status: {domainStatus}</p>
        <p>Message: {domainMessage}</p>
      </section>

      <section className="App-section">
        <h2>Curl Command Execution</h2>
        <textarea
          placeholder="Enter curl command"
          value={curlCommand}
          onChange={(e) => setCurlCommand(e.target.value)}
        />
        <button onClick={executeCurl}>Execute Curl Command</button>
        <pre>{curlOutput}</pre>
      </section>
    </div>
  );
}

export default App;









.App {
  text-align: center;
}

.App-header {
  background-color: #000;
  color: white;
  padding: 20px;
}

.App-section {
  margin: 20px auto;
  padding: 20px;
  max-width: 600px;
  background-color: #f4f4f4;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

input, textarea, button {
  margin: 10px 0;
  padding: 10px;
  width: 100%;
  max-width: 500px;
}

button {
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

pre {
  background-color: #333;
  color: #fff;
  padding: 10px;
  text-align: left;
  overflow-x: auto;
}






<plugin>
    <groupId>com.github.eirslett</groupId>
    <artifactId>frontend-maven-plugin</artifactId>
    <version>1.10.0</version>
    <executions>
        <execution>
            <id>install node and npm</id>
            <goals>
                <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
                <nodeVersion>v14.17.0</nodeVersion>
                <npmVersion>6.14.13</npmVersion>
            </configuration>
        </execution>
        <execution>
            <id>npm install</id>
            <goals>
                <goal>npm</goal>
            </goals>
            <configuration>
                <arguments>install</arguments>
            </configuration>
        </execution>
        <execution>
            <id>npm build</id>
            <goals>
                <goal>npm</goal>
            </goals>
            <configuration>
                <arguments>run build</arguments>
            </configuration>
        </execution>
    </executions>
</plugin>
